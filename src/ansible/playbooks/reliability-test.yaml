# k0s prefix before prior to kubectl is required for k0s
---
- name: Kubernetes Recovery Testing
  hosts: iot_cluster
  become: true
  tasks:
    - name: Set fact for the hostname at the given index
      set_fact:
        specific_node: "{{ groups[machine][(node_index | int)] }}"
        kubeconfig: "../.kube/{{k8s_distribution}}-config"
      run_once: true


    - name: Get list of all nodes
      delegate_to: localhost
      command: kubectl get nodes -o jsonpath='{.items[*].metadata.name}' --kubeconfig {{kubeconfig}}
      # command: k0s kubectl get nodes -o jsonpath='{.items[*].metadata.name}'
      register: node_names_output

    - name: Split node names into a list
      delegate_to: localhost
      set_fact:
        node_names: "{{ node_names_output.stdout.split() }}"

    - name: Backup current cluster state
      delegate_to: localhost
      shell: |
        # sudo k0s kubectl get all --all-namespaces -o yaml > ~{{ ansible_user }}/k-bench-results/{{ tag }}/backup_all.yaml
        # sudo k0s kubectl get nodes -o yaml > ~{{ ansible_user }}/k-bench-results/{{ tag }}/backup_nodes.yaml
        sudo kubectl get all --all-namespaces -o yaml --kubeconfig {{kubeconfig}} > ../../k-bench-results/{{k8s_distribution}}/{{ tag }}/backup_all.yaml
        sudo kubectl get nodes -o yaml --kubeconfig {{kubeconfig}} > ../../k-bench-results/{{k8s_distribution}}/{{ tag }}/backup_nodes.yaml

    - name: Get before Date and Time
      command:  date '+%s'
      register: before_datetime
      when: inventory_hostname == groups['master'][0]
  
    - name: Display the time before test
      debug:
        var: before_datetime.stdout
      when: inventory_hostname == groups['master'][0]

    - name: Write variable to file
      copy:
        content: "{{ before_datetime.stdout }}"
        dest: "./tmp-before.txt"
      when: inventory_hostname == groups['master'][0]

    - name: Copy before time
      fetch:
        src: "/home/{{ ansible_user }}/tmp-before.txt"
        dest: "../../k-bench-results/{{k8s_distribution}}/{{test_type}}/{{ tag }}/"
        flat: yes
      when: inventory_hostname == groups['master'][0]

    - name: Wait for a specified time (e.g., 250 seconds)
      ansible.builtin.pause:
        seconds: 250

    - name: Simulate {{machine}} failure (Stopping network interface)
      shell: |
        ip link set dev {{eth_interface}} down
        (sleep {{sleep_time}} && ip link set dev {{eth_interface}} up) &
      when: inventory_hostname == specific_node

    - name: Wait until all nodes are Ready
      delegate_to: localhost
      command: kubectl wait --for=condition=Ready node/{{ item }} --timeout=5m --kubeconfig {{kubeconfig}} # issue with k3s that it can arbitrarily show nodes as NotReady
      #command: k0s kubectl wait --for=condition=Ready node/{{ item }} --timeout=5m
      with_items: "{{ node_names }}" 

    - name: Wait for a specified time (e.g., 600 seconds)
      ansible.builtin.pause:
        seconds: "{{wait_time}}"

    - name: Get after Date and Time
      command:  date '+%s'
      register: after_datetime
      when: inventory_hostname == groups['master'][0]
      
    - name: Display the time after test
      debug:
        var: after_datetime.stdout
      when: inventory_hostname == groups['master'][0]

    - name: Write variable to file
      copy:
        content: "{{ after_datetime.stdout }}"
        dest: "./tmp-after.txt"
      when: inventory_hostname == groups['master'][0]

    - name: Copy after time
      fetch:
        src: "/home/{{ ansible_user }}/tmp-after.txt"
        dest: "../../k-bench-results/{{k8s_distribution}}/{{test_type}}/{{ tag }}/"
        flat: yes
      when: inventory_hostname == groups['master'][0]

    - name: Calculate recovery duration
      set_fact:
        recovery_duration: "{{ (after_datetime.stdout | int) - (before_datetime.stdout | int) }}"
      when: inventory_hostname == groups['master'][0]
      
    - name: Display recovery duration
      debug:
        var: recovery_duration
      when: inventory_hostname == groups['master'][0]
    
    - name: Write recovery to file
      copy:
        content: "{{ recovery_duration }}"
        dest: "./tmp-recovery.txt"
      when: inventory_hostname == groups['master'][0]

    - name: Copy recovery time
      fetch:
        src: "/home/{{ ansible_user }}/tmp-recovery.txt"
        dest: "../../k-bench-results/{{k8s_distribution}}/{{test_type}}/{{ tag }}/"
        flat: yes
      when: inventory_hostname == groups['master'][0]

    - name: Gather post-recovery cluster state
      delegate_to: localhost
      shell: |
        # sudo k0s kubectl get all --all-namespaces -o yaml > ~{{ ansible_user }}/k-bench-results/{{ tag }}/post_recovery_all.yaml
        # sudo k0s kubectl get nodes -o yaml > ~{{ ansible_user }}/k-bench-results/{{ tag }}/post_recovery_nodes.yaml
        sudo kubectl get all --all-namespaces -o yaml --kubeconfig {{kubeconfig}} > ../../k-bench-results/{{k8s_distribution}}/{{test_type}}/{{ tag }}/post_recovery_all.yaml
        sudo kubectl get nodes -o yaml --kubeconfig {{kubeconfig}} > ../../k-bench-results/{{k8s_distribution}}/{{test_type}}/{{ tag }}/post_recovery_nodes.yaml

