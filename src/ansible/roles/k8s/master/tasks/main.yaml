---
- name: Configure /etc/default/kubelet file
  ansible.builtin.lineinfile:
    create: yes
    path: /etc/default/kubelet
    insertafter: EOF
    line: |
      KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs"
    
- name: "Restart kubelet service"
  become: true
  systemd:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Configure /etc/docker/daemon.json file
  ansible.builtin.lineinfile:
    path: /etc/docker/daemon.json
    create: yes
    insertafter: EOF
    line: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }

- pause: seconds=30

- name: "Restart docker service"
  become: true
  systemd:
    name: docker
    daemon_reload: yes
    state: restarted

- name: Configure /etc/systemd/system/kubelet.service.d/10-kubeadm.conf file
  ansible.builtin.lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    create: yes
    insertafter: EOF
    line: |
      Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"

- name: "Restart kubelet service"
  become: true
  systemd:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Init cluster
  shell: |
    sudo kubeadm init --pod-network-cidr={{ pod_network_cidr }} --control-plane-endpoint=master --upload-certs

- pause: seconds=30

- name: Create cluster joining script
  ansible.builtin.shell: |
    kubeadm token create --print-join-command > /tmp/join_cluster.sh
    chmod a+x /tmp/join_cluster.sh
  changed_when: true

- name: Fetch cluster joining script
  ansible.builtin.fetch:
    src: /tmp/join_cluster.sh
    dest: "../.kube/{{k8s_distribution}}-join_cluster.sh"
    flat: true

- name: Grant kubectl access to "{{ansible_user}}" user
  shell: |
    mkdir -p /home/{{ansible_user}}/.kube
    sudo cp /etc/kubernetes/admin.conf /home/{{ansible_user}}/.kube/config
    sudo chown $(id -u):$(id -g) /home/{{ansible_user}}/.kube/config

- name: Apply flannel 
  shell: |
    kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
#kubectl taint nodes --all node-role.kubernetes.io/control-plane-

- pause: seconds=30